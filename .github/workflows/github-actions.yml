name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  # Job 1: Pruebas automatizadas
  test:
    name: Pruebas Automatizadas
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Instalar dependencias
        run: npm ci

      - name: Ejecutar tests unitarios
        run: npm run test -- --watch=false --browsers=ChromeHeadless

      - name: Generar reporte de cobertura
        run: npm run test -- --watch=false --code-coverage --browsers=ChromeHeadless

      - name: Subir reporte de cobertura
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          fail_ci_if_error: false

  # Job 2: Escaneo de vulnerabilidades
  security:
    name: Escaneo de Seguridad
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Instalar dependencias
        run: npm ci

      - name: Auditoría de dependencias (npm audit)
        run: npm audit --audit-level=high
        continue-on-error: true

      - name: Escaneo con Snyk
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      - name: Análisis de código estático con SonarCloud
        uses: SonarSource/sonarcloud-github-action@master
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Escaneo de secretos con Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          trivy-config: trivy.yaml
          format: 'sarif'
          output: 'trivy-results.sarif'

  # Job 3: Construcción de la aplicación
  build:
    name: Construcción de la App
    runs-on: ubuntu-latest
    needs: [test, security]
    
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Instalar dependencias
        run: npm ci

      - name: Build de producción
        run: npm run build -- --configuration production

  # Job 4: Despliegue en entorno de pruebas
    deploy-staging:
    name: Despliegue a GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    environment:
      name: github-pages
      url: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}
    
    steps:
      - name: Descargar artefactos
        uses: actions/download-artifact@v4
        with:
          name: angular-build
          path: dist

      - name: Deploy a GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist/nombre-proyecto/browser
          cname: false

      - name: Notificar éxito del deploy
        if: success()
        run: |
          echo "Deploy exitoso a GitHub Pages!"
          echo "URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"


  # Job 5: Notificaciones
  notify:
    name: Notificaciones
    runs-on: ubuntu-latest
    needs: [deploy-staging]
    if: always()
    
    steps:
      - name: Enviar notificación de resultado
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          text: |
            Pipeline completado
            Resultado: ${{ job.status }}
            Rama: ${{ github.ref }}
            Commit: ${{ github.sha }}